public class Solution {
    public ArrayList<ArrayList<Integer>> combinationSum2(int[] num, int target) {
        // Start typing your Java solution below
        // DO NOT write main() function
        Arrays.sort(num);
        ArrayList<Integer> temp = new ArrayList<Integer>();
        
        ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>> ();
        for(ArrayList<Integer> al:helper(num, target,  temp,0)){
            result.add(al);
        }
            
        return result;
        
    }
     
    public HashSet<ArrayList<Integer>> helper(int[] candidates, int target, ArrayList<Integer> temp,int idx) {
        HashSet<ArrayList<Integer>> result = new HashSet<ArrayList<Integer>>();
        if(target == 0)   {
            result.add(temp);
            return result;
        }
        for(int i =idx; i< candidates.length;i++){
            int tem = target -candidates[i];
            ArrayList<Integer> numbers = new  ArrayList<Integer>();
            numbers.addAll(temp);
            numbers.add(candidates[i]);
            if(tem>=0)
                result.addAll(helper(candidates,tem,numbers,i+1));
            else
                return result;
        }
        
        return result;
    }
}

public class Solution {
    
    public boolean isPalindrome(String s){
        int n = s.length();
        for(int i = 0; i< n/2 +1; i++){
            char left = s.charAt(i);
            char right = s.charAt(n-i-1);
            if(left != right)
                return false;
        }
        return true;
    }
    public int minCut(String s) {
        HashMap<String, Integer> hm = new HashMap<String, Integer>();
        int n = s.length(), min = -1, current = 0;
        if(s.equals(""))
            return 0;
        if(isPalindrome(s))
            return 0;
        
        for(int i = 1; i < n; i ++){
            String frontCut = s.substring(0, i);
            String endCut = s.substring(i,n);
            int frontNum, endNum;
            
            if(hm.get(frontCut)!=null)
                frontNum = hm.get(frontCut);
            else{
                frontNum = minCut(frontCut);
                hm.put(frontCut,frontNum);
            }
            
            if(hm.get(endCut)!=null)
                endNum = hm.get(endCut);
            else{
                endNum = minCut(endCut);
                hm.put(endCut,endNum);
            }
            current = frontNum + endNum + 1;
            if(min == -1 ||current < min )
                min = current;
        }
        return min;
    }
}
